{"version":3,"sources":["meteor://ğŸ’»app/imports/api/identity/collection.js","meteor://ğŸ’»app/imports/api/identity/methods.js","meteor://ğŸ’»app/imports/startup/server/register.js","meteor://ğŸ’»app/server/main.js"],"names":["module","export","Identity","Mongo","link","v","Collection","schema","SimpleSchema","identity_name","type","String","name","dob","citizenship","contact","email","Meteor","isServer","publish","tasksPublication","find","methods","city","console","log","startup"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,UAAQ,EAAC,MAAIA;AAAd,CAAd;AAAuC,IAAIC,KAAJ;AAAUH,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACD,OAAK,CAACE,CAAD,EAAG;AAACF,SAAK,GAACE,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAE1C,MAAMH,QAAQ,GAAG,IAAIC,KAAK,CAACG,UAAV,CAAqB,UAArB,CAAjB;AACPJ,QAAQ,CAACK,MAAT,GAAkB,IAAIC,YAAJ,CAAiB;AAC/BC,eAAa,EAAE;AAACC,QAAI,EAAEC;AAAP,GADgB;AAE/BC,MAAI,EAAE;AAACF,QAAI,EAAEC;AAAP,GAFyB;AAG/BE,KAAG,EAAG;AAACH,QAAI,EAAEC;AAAP,GAHyB;AAI/BG,aAAW,EAAG;AAACJ,QAAI,EAAEC;AAAP,GAJiB;AAK/BI,SAAO,EAAG;AAACL,QAAI,EAAEC;AAAP,GALqB;AAM/BK,OAAK,EAAG;AAACN,QAAI,EAAEC;AAAP;AANuB,CAAjB,CAAlB,C;;;;;;;;;;;ACHA,IAAIM,MAAJ;AAAWjB,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACa,QAAM,CAACZ,CAAD,EAAG;AAACY,UAAM,GAACZ,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIH,QAAJ;AAAaF,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACF,UAAQ,CAACG,CAAD,EAAG;AAACH,YAAQ,GAACG,CAAT;AAAW;;AAAxB,CAA3B,EAAqD,CAArD;;AAG7E,IAAIY,MAAM,CAACC,QAAX,EAAqB;AACjB;AAEAD,QAAM,CAACE,OAAP,CAAe,UAAf,EAA2B,SAASC,gBAAT,GAA4B;AACrD,WAAOlB,QAAQ,CAACmB,IAAT,EAAP;AACD,GAFD;AAID;;AAEDJ,MAAM,CAACK,OAAP,CAAe;AAEb,gBAAcV,IAAd,EAAmBC,GAAnB,EAAuBU,IAAvB,EAA4BR,OAA5B,EAAoCC,KAApC,EAA2C;AACvCQ,WAAO,CAACC,GAAR,CAAY,eAAZ,EAA4Bb,IAA5B;AACH;;AAJY,CAAf,E;;;;;;;;;;;ACZFZ,MAAM,CAACI,IAAP,CAAY,4BAAZ,E;;;;;;;;;;;ACAA,IAAIa,MAAJ;AAAWjB,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACa,QAAM,CAACZ,CAAD,EAAG;AAACY,UAAM,GAACZ,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqDL,MAAM,CAACI,IAAP,CAAY,oCAAZ;AAEhEa,MAAM,CAACS,OAAP,CAAe,MAAM,CACnB;AACD,CAFD,E","file":"/app.js","sourcesContent":["import {Mongo} from 'meteor/mongo';\n\nexport const Identity = new Mongo.Collection('identity');\nIdentity.schema = new SimpleSchema({\n    identity_name: {type: String},\n    name: {type: String},\n    dob : {type: String},\n    citizenship : {type: String},\n    contact : {type: String},\n    email : {type: String},\n  });","import { Meteor } from 'meteor/meteor';\nimport {Identity} from './collection';\n\nif (Meteor.isServer) {\n    // This code only runs on the server\n   \n    Meteor.publish('identity', function tasksPublication() {\n      return Identity.find();\n    });\n   \n  } \n\n  Meteor.methods({\n\n    'user.insert'(name,dob,city,contact,email) {\n        console.log(\"inside insert\",name)\n    }\n\n\n  });","import \"../../api/identity/methods\"","import { Meteor } from 'meteor/meteor';\nimport \"../imports/startup/server/register\"\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}