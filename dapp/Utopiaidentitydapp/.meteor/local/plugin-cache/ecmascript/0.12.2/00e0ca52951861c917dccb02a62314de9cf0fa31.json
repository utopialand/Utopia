{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/innotical/Utopia/dapp/Utopiaidentitydapp/imports/ui/pages/main/welcomePage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/ui/pages/main/welcomePage.js","filename":"/home/innotical/Utopia/dapp/Utopiaidentitydapp/imports/ui/pages/main/welcomePage.js","passPerPreset":false,"envName":"development","cwd":"/home/innotical/Utopia/dapp/Utopiaidentitydapp","root":"/home/innotical/Utopia/dapp/Utopiaidentitydapp","generatorOpts":{"filename":"/home/innotical/Utopia/dapp/Utopiaidentitydapp/imports/ui/pages/main/welcomePage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/pages/main/welcomePage.js"}},"code":"module.link(\"./welcomePage.html\");\nmodule.link(\"../../stylesheets/utopiaIdentity.css\");\nmodule.link(\"./header\");\nmodule.link(\"./footer\");\nlet ScatterJS;\nmodule.link(\"scatterjs-core\", {\n  default(v) {\n    ScatterJS = v;\n  }\n\n}, 0);\nlet ScatterEOS;\nmodule.link(\"scatterjs-plugin-eosjs\", {\n  default(v) {\n    ScatterEOS = v;\n  }\n\n}, 1);\nlet Eos;\nmodule.link(\"eosjs\", {\n  default(v) {\n    Eos = v;\n  }\n\n}, 2);\nScatterJS.plugins(new ScatterEOS());\nconst network = {\n  protocol: \"https\",\n  // Defaults to https\n  blockchain: \"eos\",\n  host: \"jungle2.cryptolions.io\",\n  port: 443,\n  chainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\"\n};\nconst eosOptions = {\n  chainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\"\n};\nTemplate.welcomePage.onCreated(function bodyOnCreated() {\n  ScatterJS.scatter.connect('utopia').then(connected => {\n    if (connected) {\n      if (ScatterJS.scatter.connect('utopia')) {\n        scatter = ScatterJS.scatter;\n        const requiredFields = {\n          accounts: [network]\n        };\n        const eos = scatter.eos(network, Eos, eosOptions);\n\n        if (scatter.identity) {\n          const acc = scatter.identity.accounts.find(x => x.blockchain === 'eos');\n          const account = acc.name;\n          localStorage.setItem(\"loginstatus\", JSON.stringify(true));\n          localStorage.setItem(\"username\", account);\n          console.log(\"inside created----1\", localStorage.getItem(\"loginstatus\"));\n          document.getElementById(\"loginButton\").innerHTML = \"logout\";\n          document.getElementsByClassName(\"optionFlex\")[0].style.display = \"flex\";\n        } else {\n          localStorage.setItem(\"loginstatus\", JSON.stringify(false));\n          localStorage.setItem(\"username\", \"\");\n          console.log(\"inside created----2\", localStorage.getItem(\"loginstatus\"));\n          document.getElementById(\"loginButton\").innerHTML = \"login\";\n          document.getElementsByClassName(\"optionFlex\")[0].style.display = \"none\";\n        }\n      }\n    } else {\n      console.log(\"scatter not installed\");\n    }\n  });\n});\nTemplate.welcomePage.events({\n  \"click .optionText1\": function () {\n    FlowRouter.go(\"/identity-reg\");\n  },\n  'click .scatterloginlogout': function (event, instance) {\n    if (!JSON.parse(localStorage.getItem(\"loginstatus\"))) {\n      ScatterJS.scatter.connect('utopia').then(connected => {\n        if (!connected) return false;\n        scatter = ScatterJS.scatter;\n        const requiredFields = {\n          accounts: [network]\n        };\n        const eos = scatter.eos(network, Eos, eosOptions);\n        scatter.getIdentity(requiredFields).then(() => {\n          const acc = scatter.identity.accounts.find(x => x.blockchain === 'eos');\n          const account = acc.name;\n          localStorage.setItem(\"username\", account);\n          console.log(\"inlogin\");\n          localStorage.setItem(\"loginstatus\", JSON.stringify(true));\n          localStorage.setItem(\"username\", account);\n          document.getElementById(\"loginButton\").innerHTML = \"logout\";\n          document.getElementsByClassName(\"optionFlex\")[0].style.display = \"flex\";\n        }).catch(error => {\n          console.error(error);\n        });\n      });\n    } else {\n      console.log(\"2-----------------\");\n      ScatterJS.scatter.forgetIdentity().then(() => {\n        localStorage.setItem(\"loginstatus\", JSON.stringify(false));\n        console.log(\"----\", localStorage.getItem(\"loginstatus\"));\n        document.getElementById(\"loginButton\").innerHTML = \"login\";\n        localStorage.setItem(\"username\", \"\");\n        console.log(\"logout\");\n        document.getElementsByClassName(\"optionFlex\")[0].style.display = \"none\";\n      });\n    }\n  }\n});\nTemplate.welcomePage.events({\n  \"click .optionText2\": function () {\n    var username = localStorage.getItem(\"username\");\n    eos.contract('identityreg1').then(identityregres => {\n      console.log(\"---\", identityregres);\n      identityregres.reqcitizen(username, {\n        authorization: username\n      }).then(response => {\n        if (response) {\n          console.log(\"hello--\", response);\n          FlowRouter.go(\"/citizenship\");\n        } else {\n          alert(\"identity is not registered !!!!\");\n          ;\n        }\n      });\n    });\n  }\n});","map":{"version":3,"sources":["imports/ui/pages/main/welcomePage.js"],"names":["module","link","ScatterJS","default","v","ScatterEOS","Eos","plugins","network","protocol","blockchain","host","port","chainId","eosOptions","Template","welcomePage","onCreated","bodyOnCreated","scatter","connect","then","connected","requiredFields","accounts","eos","identity","acc","find","x","account","name","localStorage","setItem","JSON","stringify","console","log","getItem","document","getElementById","innerHTML","getElementsByClassName","style","display","events","FlowRouter","go","event","instance","parse","getIdentity","catch","error","forgetIdentity","username","contract","identityregres","reqcitizen","authorization","response","alert"],"mappings":"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","sourcesContent":["import \"./welcomePage.html\";\nimport \"../../stylesheets/utopiaIdentity.css\";\nimport \"./header\";\nimport \"./footer\"\nimport ScatterJS from \"scatterjs-core\";\nimport ScatterEOS from \"scatterjs-plugin-eosjs\";\nimport Eos from \"eosjs\";\nScatterJS.plugins(new ScatterEOS());\nconst network = {\n    protocol: \"https\", // Defaults to https\n    blockchain: \"eos\",\n    host: \"jungle2.cryptolions.io\",\n    port: 443,\n    chainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\"\n  };\nconst eosOptions = {\n  chainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\"\n};\n\nTemplate.welcomePage.onCreated(function bodyOnCreated() {\n        ScatterJS.scatter.connect('utopia').then((connected) => {\n            if (connected) {\n                if (ScatterJS.scatter.connect('utopia')) {\n                    scatter = ScatterJS.scatter;\n                    const requiredFields = { accounts: [network] };\n                    const eos = scatter.eos(network, Eos, eosOptions);\n                    if (scatter.identity) {\n                        const acc = scatter.identity.accounts.find(x => x.blockchain === 'eos');\n                        const account = acc.name;\n                        localStorage.setItem(\"loginstatus\",JSON.stringify(true)); \n                        localStorage.setItem(\"username\",account);                       \n                        console.log(\"inside created----1\",localStorage.getItem(\"loginstatus\"));\n                        document.getElementById(\"loginButton\").innerHTML = \"logout\";\n                        document.getElementsByClassName(\"optionFlex\")[0].style.display=\"flex\";\n\n                    } else {\n                        localStorage.setItem(\"loginstatus\",JSON.stringify(false));\n                        localStorage.setItem(\"username\",\"\");\n                        console.log(\"inside created----2\",localStorage.getItem(\"loginstatus\"));\n                        document.getElementById(\"loginButton\").innerHTML = \"login\";\n                        document.getElementsByClassName(\"optionFlex\")[0].style.display=\"none\";\n                    }\n                }\n            } else {\n                console.log(\"scatter not installed\")\n            }\n        })\n   \n  });\n \nTemplate.welcomePage.events({\n    \"click .optionText1\": function() {\n        FlowRouter.go(\"/identity-reg\");\n      },\n    'click .scatterloginlogout': function( event, instance ){\n    if (!JSON.parse(localStorage.getItem(\"loginstatus\"))) {\n        ScatterJS.scatter.connect('utopia').then(connected => {\n            if (!connected) return false;\n            scatter = ScatterJS.scatter;\n            const requiredFields = { accounts: [network] };\n            const eos = scatter.eos(network, Eos, eosOptions);\n            scatter.getIdentity(requiredFields).then(() => {\n                const acc = scatter.identity.accounts.find(x => x.blockchain === 'eos');\n                const account = acc.name\n                localStorage.setItem(\"username\",account);\n                console.log(\"inlogin\");\n                localStorage.setItem(\"loginstatus\",JSON.stringify(true));\n                localStorage.setItem(\"username\",account);\n                document.getElementById(\"loginButton\").innerHTML = \"logout\";\n                document.getElementsByClassName(\"optionFlex\")[0].style.display=\"flex\";\n            }).catch(error => {\n                console.error(error);\n            });\n        });\n    } else {\n        console.log(\"2-----------------\")\n        ScatterJS.scatter.forgetIdentity().then(() => {\n            localStorage.setItem(\"loginstatus\",JSON.stringify(false));\n            console.log(\"----\",localStorage.getItem(\"loginstatus\"));\n            document.getElementById(\"loginButton\").innerHTML = \"login\";\n            localStorage.setItem(\"username\",\"\");\n            console.log(\"logout\");\n            document.getElementsByClassName(\"optionFlex\")[0].style.display=\"none\";\n        });\n    }\n    },\n})\n\nTemplate.welcomePage.events({\n      \"click .optionText2\":function(){\n        var username= localStorage.getItem(\"username\");\n        eos.contract('identityreg1').then(identityregres => {\n            console.log(\"---\",identityregres)\n            identityregres.reqcitizen(username,{authorization:username}).then((response)=>{\n              if(response){\n                  console.log(\"hello--\",response);\n                  FlowRouter.go(\"/citizenship\");\n              }else{\n                  alert(\"identity is not registered !!!!\");;\n              }\n          });\n        \n        })\n       \n      }\n    })\n"]},"sourceType":"script","hash":"00e0ca52951861c917dccb02a62314de9cf0fa31"}
