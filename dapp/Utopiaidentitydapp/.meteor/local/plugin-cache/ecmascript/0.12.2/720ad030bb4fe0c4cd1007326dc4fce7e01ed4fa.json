{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/innotical/Utopia/dapp/Utopiaidentitydapp/imports/ui/pages/main/identity-reg.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/ui/pages/main/identity-reg.js","filename":"/home/innotical/Utopia/dapp/Utopiaidentitydapp/imports/ui/pages/main/identity-reg.js","passPerPreset":false,"envName":"development","cwd":"/home/innotical/Utopia/dapp/Utopiaidentitydapp","root":"/home/innotical/Utopia/dapp/Utopiaidentitydapp","generatorOpts":{"filename":"/home/innotical/Utopia/dapp/Utopiaidentitydapp/imports/ui/pages/main/identity-reg.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/pages/main/identity-reg.js"}},"code":"'use strict'; //import \"./identity-reg.html\";\n//import \"../../stylesheets/identity-reg.css\";\n//import \"../../pages/main/footer.js\"\n//import \"../main/header.js\"\n//import { Meteor } from 'meteor/meteor';\n//import { Template } from 'meteor/templating';\n//import '../../../api/identity/methods';\n\n/* import {ScatterJS} from \"scatterjs-core\";\nimport {ScatterEOS} from \"scatterjs-plugin-eosjs\";\nimport {Eos} from \"eosjs\";\nimport {axios} from \"axios\";\n */\n\nvar ipfs = require('ipfs-http-client')('localhost', 3003);\n\nipfs.add([new Buffer(f1), new Buffer(f2)], function (err, res) {\n  console.log(\"---\", ipfs);\n  if (err || !res) return console.log(err);\n\n  for (var i = 0; i < res.length; i++) {\n    console.log(res);\n  }\n});\n/* var ipfs = require('ipfs-http-client')('localhost', 3000); */\n// create a stream from a file, which enables uploads of big files without allocating memory twice\n\nconst network = {\n  protocol: \"https\",\n  // Defaults to https\n  blockchain: \"eos\",\n  host: \"jungle2.cryptolions.io\",\n  port: 443,\n  chainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\"\n};\nconst eosOptions = {\n  chainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\"\n};\nvar scatter = {};\nvar eosinstance = {};\nTemplate.identity_reg.onCreated(function () {\n  Meteor.subscribe('identity');\n  ScatterJS.scatter.connect('utopia').then(connected => {\n    if (connected) {\n      if (ScatterJS.scatter.connect('utopia')) {\n        scatter = ScatterJS.scatter;\n        const requiredFields = {\n          accounts: [network]\n        };\n        const eos = scatter.eos(network, Eos, eosOptions);\n\n        if (scatter.identity) {\n          eosinstance = eos;\n        } else {\n          FlowRouter.go(\"/\");\n        }\n      }\n    } else {\n      console.log(\"scatter not installed\");\n    }\n  });\n}); // Setup event handling.\n\nTemplate.identity_reg.events({\n  'click .register': function (event) {\n    event.preventDefault();\n    var firstname = $('#firstname').val();\n    var midname = $('#midname').val();\n    var lastname = $('#lastname').val();\n    var dob = $('#dob').val();\n    var phonenumber = $('#phonenumber').val();\n    var email = $('#email').val();\n    var username = localStorage.getItem(\"username\");\n    console.log(\"----\", username);\n    eosinstance.contract('identityreg1').then(identityreg1 => {\n      console.log(\"----\", eosinstance);\n      identityreg1.addidentity(username, firstname, midname, lastname, dob, phonenumber, email, {\n        authorization: username\n      }).then(response => {\n        if (response) {\n          FlowRouter.go(\"/reg-success\");\n        } else {\n          alert(\"identity is not registered !!!!\");\n          ;\n        }\n      });\n    });\n  },\n  'click .upload-picture': function () {\n    console.log(\"----\");\n  }\n});","map":{"version":3,"sources":["imports/ui/pages/main/identity-reg.js"],"names":["ipfs","require","add","Buffer","f1","f2","err","res","console","log","i","length","network","protocol","blockchain","host","port","chainId","eosOptions","scatter","eosinstance","Template","identity_reg","onCreated","Meteor","subscribe","ScatterJS","connect","then","connected","requiredFields","accounts","eos","Eos","identity","FlowRouter","go","events","event","preventDefault","firstname","$","val","midname","lastname","dob","phonenumber","email","username","localStorage","getItem","contract","identityreg1","addidentity","authorization","response","alert"],"mappings":"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","sourcesContent":["'use strict'\n\n\n//import \"./identity-reg.html\";\n//import \"../../stylesheets/identity-reg.css\";\n//import \"../../pages/main/footer.js\"\n//import \"../main/header.js\"\n//import { Meteor } from 'meteor/meteor';\n//import { Template } from 'meteor/templating';\n//import '../../../api/identity/methods';\n/* import {ScatterJS} from \"scatterjs-core\";\nimport {ScatterEOS} from \"scatterjs-plugin-eosjs\";\nimport {Eos} from \"eosjs\";\nimport {axios} from \"axios\";\n */\nvar ipfs = require('ipfs-http-client')('localhost', 3003)\nipfs.add([new Buffer(f1), new Buffer(f2)], function (err, res) {\n    console.log(\"---\",ipfs);\n  if (err || !res) return console.log(err)\n\n  for (var i = 0; i < res.length; i++) {\n    console.log(res)\n  }\n})\n/* var ipfs = require('ipfs-http-client')('localhost', 3000); */\n\n// create a stream from a file, which enables uploads of big files without allocating memory twice\n\n\nconst network = {\n    protocol: \"https\", // Defaults to https\n    blockchain: \"eos\",\n    host: \"jungle2.cryptolions.io\",\n    port: 443,\n    chainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\"\n};\nconst eosOptions = {\n    chainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\"\n};\n\nvar scatter={};\nvar eosinstance = {};\nTemplate.identity_reg.onCreated(function () {\n\n    Meteor.subscribe('identity');\n    ScatterJS.scatter.connect('utopia').then((connected) => {\n        if (connected) {\n            if (ScatterJS.scatter.connect('utopia')) {\n                scatter = ScatterJS.scatter;\n                const requiredFields = { accounts: [network] };\n                const eos = scatter.eos(network, Eos, eosOptions);\n                if (scatter.identity) {\n                    eosinstance = eos;\n                } else {\n                    FlowRouter.go(\"/\");\n                }\n            }\n        } else {\n            console.log(\"scatter not installed\")\n        }\n    });\n});\n\n// Setup event handling.\nTemplate.identity_reg.events({\n    'click .register': function (event) {\n        event.preventDefault();\n        var firstname = $('#firstname').val();\n        var midname = $('#midname').val();\n        var lastname = $('#lastname').val();\n        var dob = $('#dob').val();\n        var phonenumber = $('#phonenumber').val();\n        var email = $('#email').val();\n        var username = localStorage.getItem(\"username\")\n        console.log(\"----\", username);\n        eosinstance.contract('identityreg1').then(identityreg1 => {\n            console.log(\"----\", eosinstance);\n            identityreg1.addidentity(username, firstname, midname, lastname, dob, phonenumber, email, { authorization: username }).then((response) => {\n                if (response) {\n                    FlowRouter.go(\"/reg-success\");\n                } else {\n                    alert(\"identity is not registered !!!!\");;\n                }\n\n            });\n\n        })\n    },\n   'click .upload-picture':function(){\n       console.log(\"----\");\n       \n   }\n\n});\n\n"]},"sourceType":"script","hash":"720ad030bb4fe0c4cd1007326dc4fce7e01ed4fa"}
