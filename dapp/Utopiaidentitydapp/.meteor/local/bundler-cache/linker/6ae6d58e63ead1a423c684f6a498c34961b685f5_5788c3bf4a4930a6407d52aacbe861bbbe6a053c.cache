[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"identity\":{\"collection.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/identity/collection.js                                //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.export({\n  Identity: () => Identity\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Identity = new Mongo.Collection('identity');\nIdentity.schema = new SimpleSchema({\n  identity_name: {\n    type: String\n  },\n  name: {\n    type: String\n  },\n  dob: {\n    type: String\n  },\n  citizenship: {\n    type: String\n  },\n  contact: {\n    type: String\n  },\n  email: {\n    type: String\n  }\n});\n///////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/identity/methods.js                                   //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Identity;\nmodule.link(\"./collection\", {\n  Identity(v) {\n    Identity = v;\n  }\n\n}, 1);\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  Meteor.publish('identity', function tasksPublication() {\n    return Identity.find();\n  });\n}\n\nMeteor.methods({\n  'user.insert'(name, dob, city, contact, email) {\n    console.log(\"inside insert\", name);\n  }\n\n});\n///////////////////////////////////////////////////////////////////////\n\n}}},\"startup\":{\"server\":{\"register.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/startup/server/register.js                                //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.link(\"../../api/identity/methods\");\n///////////////////////////////////////////////////////////////////////\n\n}}}},\"server\":{\"main.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/main.js                                                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nmodule.link(\"../imports/startup/server/register\");\nMeteor.startup(() => {// code to run on server at startup\n});\n///////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/identity/collection.js","imports/api/identity/methods.js","imports/startup/server/register.js","server/main.js"],"names":["module","export","Identity","Mongo","link","v","Collection","schema","SimpleSchema","identity_name","type","String","name","dob","citizenship","contact","email","Meteor","isServer","publish","tasksPublication","find","methods","city","console","log","startup"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,UAAQ,EAAC,MAAIA;AAAd,CAAd;AAAuC,IAAIC,KAAJ;AAAUH,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACD,OAAK,CAACE,CAAD,EAAG;AAACF,SAAK,GAACE,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAE1C,MAAMH,QAAQ,GAAG,IAAIC,KAAK,CAACG,UAAV,CAAqB,UAArB,CAAjB;AACPJ,QAAQ,CAACK,MAAT,GAAkB,IAAIC,YAAJ,CAAiB;AAC/BC,eAAa,EAAE;AAACC,QAAI,EAAEC;AAAP,GADgB;AAE/BC,MAAI,EAAE;AAACF,QAAI,EAAEC;AAAP,GAFyB;AAG/BE,KAAG,EAAG;AAACH,QAAI,EAAEC;AAAP,GAHyB;AAI/BG,aAAW,EAAG;AAACJ,QAAI,EAAEC;AAAP,GAJiB;AAK/BI,SAAO,EAAG;AAACL,QAAI,EAAEC;AAAP,GALqB;AAM/BK,OAAK,EAAG;AAACN,QAAI,EAAEC;AAAP;AANuB,CAAjB,CAAlB,C;;;;;;;;;;;ACHA,IAAIM,MAAJ;AAAWjB,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACa,QAAM,CAACZ,CAAD,EAAG;AAACY,UAAM,GAACZ,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIH,QAAJ;AAAaF,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACF,UAAQ,CAACG,CAAD,EAAG;AAACH,YAAQ,GAACG,CAAT;AAAW;;AAAxB,CAA3B,EAAqD,CAArD;;AAG7E,IAAIY,MAAM,CAACC,QAAX,EAAqB;AACjB;AAEAD,QAAM,CAACE,OAAP,CAAe,UAAf,EAA2B,SAASC,gBAAT,GAA4B;AACrD,WAAOlB,QAAQ,CAACmB,IAAT,EAAP;AACD,GAFD;AAID;;AAEDJ,MAAM,CAACK,OAAP,CAAe;AAEb,gBAAcV,IAAd,EAAmBC,GAAnB,EAAuBU,IAAvB,EAA4BR,OAA5B,EAAoCC,KAApC,EAA2C;AACvCQ,WAAO,CAACC,GAAR,CAAY,eAAZ,EAA4Bb,IAA5B;AACH;;AAJY,CAAf,E;;;;;;;;;;;ACZFZ,MAAM,CAACI,IAAP,CAAY,4BAAZ,E;;;;;;;;;;;ACAA,IAAIa,MAAJ;AAAWjB,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACa,QAAM,CAACZ,CAAD,EAAG;AAACY,UAAM,GAACZ,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqDL,MAAM,CAACI,IAAP,CAAY,oCAAZ;AAEhEa,MAAM,CAACS,OAAP,CAAe,MAAM,CACnB;AACD,CAFD,E","file":"/app.js","sourcesContent":["import {Mongo} from 'meteor/mongo';\n\nexport const Identity = new Mongo.Collection('identity');\nIdentity.schema = new SimpleSchema({\n    identity_name: {type: String},\n    name: {type: String},\n    dob : {type: String},\n    citizenship : {type: String},\n    contact : {type: String},\n    email : {type: String},\n  });","import { Meteor } from 'meteor/meteor';\nimport {Identity} from './collection';\n\nif (Meteor.isServer) {\n    // This code only runs on the server\n   \n    Meteor.publish('identity', function tasksPublication() {\n      return Identity.find();\n    });\n   \n  } \n\n  Meteor.methods({\n\n    'user.insert'(name,dob,city,contact,email) {\n        console.log(\"inside insert\",name)\n    }\n\n\n  });","import \"../../api/identity/methods\"","import { Meteor } from 'meteor/meteor';\nimport \"../imports/startup/server/register\"\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}}]